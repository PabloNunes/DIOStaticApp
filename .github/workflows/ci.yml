name: CI Linting Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint and Build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install HTML and CSS linters
      run: |
        npm install -g htmlhint stylelint stylelint-config-standard
        
    - name: Lint HTML files
      run: |
        find . -name "*.html" -not -path "./node_modules/*" -not -path "./.git/*" -not -path "./Client/bin/*" -not -path "./Client/obj/*" | xargs htmlhint
      continue-on-error: true
      
    - name: Lint CSS files
      run: |
        find . -name "*.css" -not -path "./node_modules/*" -not -path "./.git/*" -not -path "./Client/bin/*" -not -path "./Client/obj/*" -not -path "./deployment-test/*" -not -path "./Client/wwwroot/css/bootstrap/*" -not -path "./Client/wwwroot/css/open-iconic/*" -not -name "*.min.css" | xargs stylelint --config-basedir ./
      continue-on-error: true
      
    - name: Build for deployment validation
      run: dotnet publish Client/BlazorBasic.csproj -c Release -o deployment-test
      
    - name: Comment PR with results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.COMMENT_TOKEN }}
        script: |
          const fs = require('fs');
          let comment = '## CI Pipeline Results üîç\n\n';
          comment += '‚úÖ Build: Success\n';
          comment += '‚úÖ HTML/CSS Linting: Check logs for details\n';
          comment += '\nYour changes have been validated by the CI pipeline!';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });